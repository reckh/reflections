When would you want to create a remote repository rather than keeping all your work local?

A remote repository allows for collaboration, and it might be more secure to store some work offsite.

Why might you want to always pull changes manually rather than having Git automatically stay up-to-date with your remote repository?

By pulling changes manually, you can make sure that you’re only taking the changes that you want to have on your local version.  This might be especially pertinent for projects with collaboration.

Describe the differences between forks, clones, and branches. When would you use one instead of another?

Creating a fork is a way of cloning a repository on GitHub.  I can use it if I want to copy someone’s repository and make changes, but still link back to them.  I would then clone the repository from GitHub to my local directory so that I can work on it locally.  A branch can be used to introduce changes to the code that might be experimental, or create a new feature.

What is the benefit of having a copy of the last known state of the remote stored locally?

This is helpful in case changes are made to the remote and you want to go back and be able to access and work off of the previous version.  It also allows you to be able to work offline.

How would you collaborate without using Git or GitHub? What would be easier, and what would be harder?

I would have to save different versions of files with slightly different names, and send those files to collaborators using email or file sharing. It would be easier to make changes without having to document the commit, but much harder to keep track of the details of updates (when, who, what, etc.) and it would be harder to merge multiple changes into one file.